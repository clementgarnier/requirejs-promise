/*! see LICENCE for Simplified BSD Licence */

function isPromise(object){var result=!0;return $.type(object)!=="object"?!1:($.each
(["always","done","fail","pipe","progress","pipe","state","then"],function(index,
method){if($.type(object[method])!=="function")return result=!1,!1}),result)}define
("example",["jquery"],function($){var dfrd=new $.Deferred,payload={isOkay:!0,message
:"example is loaded"};return setTimeout(function(){dfrd.resolve(payload)},0),dfrd
.promise()}),define("promise",["require"],function(require){var isFunction=function(
object){return object?Object.prototype.toString.call(object)==="[object Function]"
:!1},isPromise=function(object){var result=!0,properties=["always","done","fail","pipe"
,"progress","pipe","state","then"],p,pLength=properties.length;if(!object||typeof 
object!="object")return!1;for(p=0;p<pLength;p++)if(!isFunction(object[properties[
p]])){result=!1;break}return result};return{load:function(name,req,load,config){req
([name],function(result){isPromise(result)?(result.fail(function(){load.error.apply
(this,arguments)}),result.then(function(){load.apply(this,arguments)})):load(result
)})}}}),require.config({paths:{promise:"../requirejs-promise",jquery:"./jquery-1.7.2.min"
}}),require(["jquery"],function($){module("test utility functions"),test("isPromise()"
,function(){var deferred=new $.Deferred,promise=deferred.promise();ok(typeof isPromise=="function"
,"isPromise() function is defined"),ok(!isPromise(123),"number is not a Promise")
,ok(!isPromise("abc"),"string is not a Promise"),ok(!isPromise([]),"array is not a Promise"
),ok(!isPromise({}),"plain object is not a Promise"),ok(!isPromise(!0),"boolean is not a Promise"
),ok(isPromise(deferred),"Deferred is a Promise"),ok(isPromise(promise),"Promise is a Promise"
)})}),require(["example"],function(payload){module("direct require on jQuery Promise example"
),test("jQuery Promise example",function(){ok(isPromise(payload),"example returns a Promise"
)})}),require(["promise!example"],function(payload){module("require jQuery promise example via requirejs-promise plugin"
),test("jQuery Promise example",function(){ok(!isPromise(payload),"promise!example return is not a Promise"
),ok(payload.isOkay,"promise!example return is as expected")})}),define("main",function(
){})